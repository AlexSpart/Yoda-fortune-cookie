apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend-container
        image: ghcr.io/alexspart/backend:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 9000
        env:
        - name: REDIS_DNS
          value: redis-service
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template: 
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend-container
        image: ghcr.io/alexspart/frontend:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 8080
        env:
        - name: BACKEND_DNS
          value: backend-service       
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis-container
        image: docker.io/redis:6.0.5
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        ports:
        - containerPort: 6379  
---

apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    name: backend
  ports:
  - port: 9000
    targetPort: 9000
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    name: frontend
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    name: redis
  ports:
  - port: 6379
    targetPort: 6379